" use strict ";
// создадим просто массив с набором чисел
const arr = [1, 2, 3, 6, 8];
// _________
// метод который удалят последнее значение массива 
// arr.pop();
// ____________
// используем метод который будет добавлять в конец
// arr.push(10);
// ____________ 

console.log(arr);

for (let i = 0; i < arr.length; i++) {
    // этот цикл будет отрабатывать пока не закочаться элементы массива 

    console.log(arr[i]);
}
// так же мы можем исползовать конструкцию перебора ниже 

// of работает только с масиво-подобными сущностями (массив,псевдомассивы,меп и теп)
for (let value of arr) {
    console.log(value);
}


console.log(arr.length);
// -------------------------------------------------------

// так делать нельзя т.к нарушаеться последовательность 
// const arr = [2, 3, 5, 8, 10];
// arr[99] = 0;
// console.log(arr.length);
// console.log(arr);


// ----------------------------------------------------------

arr.forEach(function(item, i, arr) {
    console.log(`${i}: ${item} внутри массива ${arr}`);
});
//  сдесь break и continue для остановки метода не сработает 
// это единственное отличие 
// -------------------------------------------------
/*
от пользователя или от сервера мы получили большую строку(строковой тип данных) 
где через какой нибудь знак (запятую ) написанны товары 
и мы хотим превратить их просто  в обычный массив где они буду по порядку 
*/
// const str = prompt("", "");
// const products = str.split(", ");
// products.sort();

// console.log(products.join('; '));