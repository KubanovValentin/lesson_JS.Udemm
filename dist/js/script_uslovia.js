" use strict ";

//  условия 4 равен 9
// что же должно случиться если это условие верно 
// и выводим при равенстве в консоль ок
// но оно не выполниться , и если мы вместо 9 напишем 4 то выполниться 
// if (4 == 9) {
//  console.log('ok!');
// }
// ---------------
// запускаем ранкод и получаем ок
// if (4 == 4) {
//      console.log('ok!');
//     }
    // сделаем условие если не выполнилось данное равенство
    
    // ----------------------------------------
    // if (4 == 9) {
    //     console.log('ok!');
    //     }else {
    //         console.log('Error');
    //     }

    //  -------------------------------------------
    // на своем сайте мы можем поместить в скобки одно значение которое есть на страничке
    // if (1) {
    //     console.log('ok!');
    //     }else {
    //         console.log('Error');
    //     }
        // если это значение или блок будет на страничке то всегда (потому что 1 значение) будет true 
        // если нет такого значения или блока то будет false 

//    на вашем сайте будет большое количество условий и для этого используеться вложенность     

// создаем переменную num и помещаю в нее значение 50
    // const num = 50;
//  при помощи условия начинаем проверть
        // if (num < 49) {
        //     console.log('error');
// и дальше мы продолжаем условия для того чтобы узнать сколько в этой переменно поэтому мы можем развлетлять условия
        // }else if (num > 100) {
        //     console.log('много');
        // }else {
        //     console.log ('ok');
        // }
// -------------------------------------------------
        // есть и другой синтаксис записи условий при помощи тернарного операторота
        // const num = 50;
        // (num === 50) ? console.log('ok!') : console.log('error');

        // сначало идет переменная которая равна 50
        // если вдруг это условие верно то выполняем условие ок!
        // если не верно то error 
        // использовали два оператора ? и : 
        // тернарный оператор - в нем участвуют три аргумента единственный оператор

// -------------------------------------------------------------
// чтобы избежать больших витвлений как выше у нас есть команда ниже (это такая модификация if)
const num = 50;
//   в условие switch помещаем num т.к будем проверять 
// в нутри фигурных скобок будут проверки
// конструкция свитч всегда идет на строгое сравнение в отличие от обычных условий(там мы могли < или > использовать)
switch (num) {
    case 49:
        console.log('неверно');
        // после каждой команды или действия надо записывать ключевое значение break
        // благодаря этому если будер равно 49 то выполниться консоль и непойдет дальше скрипт прогонять кейсы
        break;
    case 100:
        console.log('неверно');
        break;
    case 50:
        console.log('в точку!');  
        break;
    // таких куйсов может быть много и не один не выполнит цсловие и тогда выполнить по умолчанию т.к ничего не подошло
    // есть такое
    default:
        console.log('не в этот раз');
        break;
    // со строками это тоже работает только  в ковычки '50'
}
// на сайтах редко используеться такое условие но в некоторых библиотеках часто это используют например редакс
