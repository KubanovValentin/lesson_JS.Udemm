'use strict';
// инлайн стили всегда перебивают стили css это для того чтобы с помощью js всегда переделать стиль
// и инлайн стиль преоритет

const box = document.getElementById('box'),
    btns = document.getElementsByTagName('button'),
    circles = document.getElementsByClassName('circle'),
    hearts = document.querySelectorAll('.heart'),
    oneHeart = document.querySelector('.heart'),
    wrapper =  document.querySelector('.wrapper');
    // -----------------------------------можно еще более точнее искать 
    // btns = document.getElementsByTagName('button'),
    // circles = document.getElementsByClassName('circle'),
    // wrapper =  document.querySelector('.wrapper'),
    // hearts = wrapper.querySelectorAll('.heart'),//мы уже обращаемся и ищем непосредственно в wrapper а не document
    // oneHeart = wrapper.querySelector('.heart');//мы уже обращаемся и ищем непосредственно в wrapper а не document

    

box.style.backgroundColor = 'blue';
box.style.width = '300px';

btns[1].style.borderRadius = '100%';

// ---------------
// самая частая ошибка новичков 
// circles.style.backgroundColor = 'red';----------------------не работает
// пытаемся поменять стиль у кружка , но ничего не получаеться потому что мы обращаемся к псевдомассиву
// а он ничего не знает о конкретном элементе ,ведь он просто содержит  элементы. 
// поэтому надо четку указать элемент circles[0]
circles[0].style.backgroundColor = 'red';

// для того чтобы несколько назначить элементам стили есть свойство cssText

box.style.cssText = 'background-color:green; width:400px;';
// ---------------------
// для того чтобы над несколькими элементами произвести одно и тоже действие мы сначала 
// мы используем цикл - перебирающую конструкцию for 
// начинаем с перебирать с 0 т.к все элементы массива начинаеться попорядку и именно с 0 (i = 0)
// затем цикл будет работать до тех пор пока i< hearts.length (length свойство количества элементов)
// цикл будет работать пока они там есть 
// для того чтобы это все работало обращаемся к псевдо-массиву hearts чтоб получить какой то элемент ставим []
// т.к мы уже работаем с элементом [i] прописываем стиль


// for (let i = 0; i< hearts.length; i++) {
//     hearts[i].style.backgroundColor = 'blue';
// }


// ---------------------------------------
// перебирающие методы 
// метод forEach
// назовем каждое серде как item 
hearts.forEach(item => {
    item.style.backgroundColor = 'blue';
});

// он работает так же как и предыдущий выше 

// это работает со всеми элементами 
// ---------------------

const div = document.createElement('div');// элемет div создан и существует только в нутри скрипта(js файла)
// не элементы а ноды 
// создаем текстовый узел 
// const text = document.createTextNode('тут был я'); //и этот текст появиться на страничке,но так редко делают

// берем наш блок(div) у него есть такое свойство как classList и после этого можем произвести дейтвие(добав или убрать)
// это метод на свойстве classList и мы дальше добавляем(add)
div.classList.add('black');//используем black т.к он есть в css файле(стили)

// нас создан элемент который лежит в файле js и отношения к html файлу не имеет отношения 
// и на странице его нет и мы используем DOM любой элемент можно вставить и т.д только по отношению к другому элементу 

// document.body.append(div);// достучимся до тега body и исползуем метод append
//в переводе мы берем тег боди и помещаем во внутрь в самый конец тега нужный див
// так же мы можем вставить в место любого другого радителя 
// -----------------------------------------------------------------в конец помещаем
// document.querySelector('.wrapper').append(div);// в конец помещаем
// wrapper.append(div);
// wrapper.appendChild(div);  // старый метод но он встречаеться 

// -----------------------------------------------------------------помещаем в начало родителя
// wrapper.prepend(div); // помещаем в начало родителя
// так же есть свойства бефоре и афтер 

// wrapper.insertBefore(div, hearts[0]);//старый метод(это елемент который помещаем, перед каким мы помещаем элементом )
// ------------------------------------------------------------------помещаем перед 
// hearts[0].before(div); //помещаем перед нужным элементом 


// --------------------------------------------------------------------помещаем после 
// hearts[2].after(div);//помещаем после 

// ---------------- ----------------------------------------------------удаление 
// circles[0].remove();//удаление с помощью remove

// wrapper.removeChild(hearts[1]);//старый метод который встречаеться 

// ------------------------------------------------------------заменение одного элемента другим
// hearts[0].replaceWith(circles[0]); //hearts заменяем на circles

// wrapper.replaceChild(circles[0], hearts[0]);//2 элемент меняем на первый т.е кружок меняем на сердце-старый метод


// ------------------------------------------------------------------------как добавлять текст в элементы 


wrapper.append(div);

// --------------------------------------------1 метод (innerHTML)-работает с HTML структурами
// div.innerHTML = "hello word";
// div.innerHTML = "<h1>hello word</h1>";

// ----------------------------------------------2 метод (textContent) работает только с текстом

// div.textContent = "Hello";
// этот метот используеться для получения от пользователя информации и она будет приходить только в тексте
// если использовать первый метод то пользователь введя тег с текстом может сломать верстку



// -----------------------------------------------------------------------------------------комбинация всех знаний выше
// как нам вставить кусочек кода перед определенным тегом 

div.innerHTML = "<h1>hello word</h1>";


// мы указываем елемент над которым мы будем производить действия 
// div.insertAdjacentHTML('beforebegin', '<h1>1</h1>');-перед div с hello word
// div.insertAdjacentHTML('afterbegin', '<h1>1</h1>'); 
div.insertAdjacentHTML('afterend', '<h1>12123123</h1>');